/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package autopecas.view.menu;

import autopecas.view.menu.enums.WindowType;
import java.awt.AWTEvent;
import java.awt.Toolkit;
import java.awt.event.AWTEventListener;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.KeyStroke;

/**
 *
 * @author ADMIN
 */
public class Application extends javax.swing.JFrame {

    private JMenuDinamic selected;
    private boolean inSale = true;
    private final JDialogSearchProduct dialog = new JDialogSearchProduct(this, true);

    public Application() {
        initComponents();
        setLocationRelativeTo(null);
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        addKeyControllers();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jPanelRootPane = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuVenda = new javax.swing.JMenu();
        jMenuItem4 = new JMenuDinamic(this, WindowType.VENDA);
        jMenuItem5 = new JMenuDinamic(this, WindowType.PESQUISA);
        jMenu4 = new javax.swing.JMenu();

        jMenu1.setText("jMenu1");

        jMenu2.setText("jMenu2");

        jMenuItem1.setText("jMenuItem1");

        jMenuItem2.setText("jMenuItem2");

        jMenuItem3.setText("jMenuItem3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanelRootPane.setLayout(new java.awt.BorderLayout());

        jMenuVenda.setText("Vendas");

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F12, 0));
        jMenuItem4.setText("Venda");
        jMenuVenda.add(jMenuItem4);

        jMenuItem5.setText("Pesquisar");
        jMenuVenda.add(jMenuItem5);

        jMenuBar1.add(jMenuVenda);

        jMenu4.setText("Administração");
        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelRootPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1004, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelRootPane, javax.swing.GroupLayout.DEFAULT_SIZE, 526, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {

                Application app = new Application();
                app.setVisible(true);

            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenu jMenuVenda;
    private javax.swing.JPanel jPanelRootPane;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    // End of variables declaration//GEN-END:variables

    private void configureMenu(ActionEvent source) {
        if(source.getSource() instanceof JMenuDinamic){
            JMenuDinamic  d = (JMenuDinamic) source.getSource();
            d.actionPerformed(source);
        }
    }

    private void addKeyControllers() {
        JPanel painel = ((JPanel) getContentPane());
        //Criamos as ações  
        ActionMap actionMap = painel.getActionMap();
        actionMap.put("F12", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                configureMenu(evt);
                inSale = true;
            }
        });

        actionMap.put("finalizarVenda", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent evt) {
            }
        });
        actionMap.put("irParaRecebido", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent evt) {
            }
        });
        actionMap.put("irParaQuantidade", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent evt) {
            }
        });

        //Registramos os botões que queremos para as ações  
        InputMap imap = painel.getInputMap(JPanel.WHEN_IN_FOCUSED_WINDOW);
        imap.put(KeyStroke.getKeyStroke("F2"), "novaVenda");
        imap.put(KeyStroke.getKeyStroke("F6"), "finalizarVenda");
        imap.put(KeyStroke.getKeyStroke("F7"), "irParaRecebido");
        imap.put(KeyStroke.getKeyStroke("F8"), "irParaQuantidade");

        final Application frame = this;
        Toolkit.getDefaultToolkit().addAWTEventListener(
                new AWTEventListener() {
                    @Override
                    public void eventDispatched(AWTEvent event) {
                        KeyEvent ev = (KeyEvent) event;
                        if (ev.getID() == KeyEvent.KEY_RELEASED && inSale && checkKeyAction(ev)) {
                            dialog.setText(ev.getKeyChar() + "");
                            inSale = false;
                            dialog.setVisible(true);
                            inSale = true;
                        } else if (ev.getKeyCode() == KeyEvent.VK_F8 && inSale ){
                            dialog.setText("");
                            inSale = false;
                            dialog.setVisible(true);
                            inSale = true;
                        }
                    }

                    private boolean checkKeyAction(KeyEvent ev) {
                        if (ev.getKeyCode() == KeyEvent.VK_F1
                                || ev.getKeyCode() == KeyEvent.VK_F2
                                || ev.getKeyCode() == KeyEvent.VK_F3
                                || ev.getKeyCode() == KeyEvent.VK_F4
                                || ev.getKeyCode() == KeyEvent.VK_F5
                                || ev.getKeyCode() == KeyEvent.VK_F6
                                || ev.getKeyCode() == KeyEvent.VK_F7
                                || ev.getKeyCode() == KeyEvent.VK_F8
                                || ev.getKeyCode() == KeyEvent.VK_F9
                                || ev.getKeyCode() == KeyEvent.VK_F10
                                || ev.getKeyCode() == KeyEvent.VK_F11
                                || ev.getKeyCode() == KeyEvent.VK_F12
                                || ev.getKeyCode() == KeyEvent.VK_TAB
                                || ev.getKeyCode() == KeyEvent.VK_UP
                                || ev.getKeyCode() == KeyEvent.VK_DOWN
                                || ev.getKeyCode() == KeyEvent.VK_LEFT
                                || ev.getKeyCode() == KeyEvent.VK_RIGHT
                                || ev.getKeyCode() == KeyEvent.VK_ALT_GRAPH
                                || ev.getKeyCode() == KeyEvent.VK_ALT
                                || ev.getKeyCode() == KeyEvent.VK_CONTROL
                                || ev.getKeyCode() == KeyEvent.VK_INSERT
                                || ev.getKeyCode() == KeyEvent.VK_HOME
                                || ev.getKeyCode() == KeyEvent.VK_NUM_LOCK
                                || ev.getKeyCode() == KeyEvent.VK_DELETE
                                || ev.getKeyCode() == KeyEvent.VK_PRINTSCREEN
                                || ev.getKeyCode() == KeyEvent.VK_SCROLL_LOCK
                                || ev.getKeyCode() == KeyEvent.VK_PAUSE
                                || ev.getKeyCode() == KeyEvent.VK_PAGE_DOWN
                                || ev.getKeyCode() == KeyEvent.VK_PAGE_UP
                                || ev.getKeyCode() == KeyEvent.VK_END
                                || ev.getKeyCode() == KeyEvent.VK_ENTER
                                || ev.getKeyCode() == KeyEvent.VK_CAPS_LOCK
                                || ev.getKeyCode() == KeyEvent.VK_SHIFT
                                || ev.getKeyCode() == KeyEvent.VK_CONTEXT_MENU
                                || ev.getKeyCode() == KeyEvent.VK_WINDOWS
                                || ev.getKeyCode() == KeyEvent.VK_ESCAPE) {
                            return false;
                        }
                        return true;
                    }
                }, AWTEvent.KEY_EVENT_MASK);
    }

    public JMenuDinamic getSelected() {
        return selected;
    }

    public void setSelected(JMenuDinamic selected) {
        this.selected = selected;
    }

    void setApplicationPanel(JPanel panel) {
        this.jPanelRootPane.removeAll();
        this.jPanelRootPane.add(panel, java.awt.BorderLayout.CENTER);
        panel.setVisible(true);
        this.revalidate();
        this.repaint();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        Logger.getLogger(getClass().getSimpleName()).log(
                Level.INFO, "panel '{'{0}'}' has add", panel.toString());
    }

    public boolean isInSale() {
        return inSale;
    }

    public void setInSale(boolean inSale) {
        this.inSale = inSale;
    }
}
